-- phpMyAdmin SQL Dump
-- version 3.2.1
-- http://www.phpmyadmin.net
--
-- Palvelin: localhost
-- Luontiaika: 27.03.2011 klo 17:43
-- Palvelimen versio: 5.1.37
-- PHP:n versio: 5.3.0

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";

--
-- Tietokanta: `cbkk`
--

-- --------------------------------------------------------

--
-- Rakenne taululle `cbkk_codes`
--

CREATE TABLE IF NOT EXISTS `cbkk_codes` (
  `name` text NOT NULL,
  `code` text NOT NULL,
  `description` text NOT NULL,
  `author` varchar(15) NOT NULL,
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `added` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `type` int(11) NOT NULL,
  `category` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=12 ;

--
-- Vedos taulusta `cbkk_codes`
--

INSERT INTO `cbkk_codes` (`name`, `code`, `description`, `author`, `id`, `added`, `type`, `category`) VALUES
('clear()', 'Function clear()\r\n	For p.PADDLE = Each PADDLE\r\n		Delete p\r\n	Next p\r\n	For b.BALL = Each BALL\r\n		Delete b\r\n	Next b\r\n	For br.BRICK = Each BRICK\r\n		Delete br\r\n	Next br\r\nEndFunction', 'Tyhjent?pelin objektit.', 'Sly_Jack0', 1, '2010-08-16 15:52:51', 0, 7),
('Line()', 'Function(x1,y1,x2,y2)\r\n   Line x1,y1,x2,y2\r\n   Return True\r\nEndFunction', 'Pirtää viivan', 'testi', 2, '2010-08-30 15:33:42', 0, 3),
('Testikoodi', 'SCREEN 800,600\r\n\r\n//Odota nappia\r\nWaitKey', 'Moi', '1337', 3, '2010-09-01 18:53:41', 0, 8),
('Maastogeneraattori', 'SCREEN 1024,768\r\n\r\nDim contour(ScreenWidth())\r\n\r\nGlobal gMap\r\n\r\ngenerateContour()\r\ncreateForeground()\r\n\r\nRepeat\r\n	DrawImage gMap,0,0\r\n	DrawScreen\r\nForever\r\n\r\n\r\nFunction generateContour()\r\n\r\n	Dim rand1 As Float, rand2 As Float, rand3 As Float, rand4 As Float\r\n	Dim offset As Float, peakheight As Float, flatness As Float, height As Float\r\n	\r\n	rand1 = Rnd(1) + 1\r\n	rand2 = Rnd(1) + 2\r\n	rand3 = Rnd(1) + 3\r\n	\r\n	offset = ScreenHeight() / 2\r\n	peakheight = ScreenHeight() / 4\r\n	flatness = ScreenWidth() / 8\r\n	\r\n	For x = 0 To ScreenWidth()\r\n	\r\n		height = peakheight / rand1 * Sin((Float(x) / flatness * rand1 + rand1)  * (180 / PI))\r\n		height = height + peakheight / rand2 * Sin((Float(x) / flatness * rand2 + rand2)  * (180 / PI))\r\n		height = height + peakheight / rand3 * Sin((Float(x) / flatness * rand3 + rand3)  * (180 / PI))\r\n\r\n		height = height + offset\r\n		\r\n		contour(x) = Int(height)\r\n	\r\n	Next x\r\n\r\nEndFunction\r\n\r\nFunction createForeground()\r\n\r\n	gMap = MakeImage(ScreenWidth(),ScreenHeight())\r\n	\r\n	DrawToImage gMap\r\n	\r\n		For x = 0 To ScreenWidth()\r\n			Line x,contour(x),x,ScreenHeight()\r\n		Next x\r\n	\r\n	DrawToScreen\r\n	\r\nEndFunction', 'Luo maaston', '1337', 4, '2010-09-03 07:31:10', 0, 6),
('asf', 'Function OpenCDTray()\r\n \r\n   St$ = "Set CDAudio Door Open"\r\n   asd = MakeMEMBlock(Len(st) + 1)\r\n \r\n   For i = 0 To Len(st)\r\n      PokeByte asd, i, Asc(Mid(st, i + 1, 1))\r\n   Next i\r\n   PokeByte asd, Len(st), 0\r\n \r\n   CallDLL "winmm.dll", "mciSendStringA", asd\r\n \r\n   DeleteMEMBlock asd\r\nEndFunction\r\n \r\n \r\n \r\nFunction CloseCDTray()\r\n   St$ = "Set CDAudio Door Closed"\r\n   asd = MakeMEMBlock(Len(st) + 1)\r\n \r\n   For i = 0 To Len(st)\r\n     PokeByte asd, i, Asc(Mid(st, i + 1, 1))\r\n   Next i\r\n   PokeByte asd, Len(st), 0\r\n   \r\n   CallDLL "winmm.dll", "mciSendStringA", asd\r\n   DeleteMEMBlock asd\r\nEndFunction', 'asf', '1337', 5, '2010-09-06 20:45:53', 0, 6),
('asg', 'Function OpenCDTray()\r\n \r\n   St$ = "Set CDAudio Door Open"\r\n   asd = MakeMEMBlock(Len(st) + 1)\r\n \r\n   For i = 0 To Len(st)\r\n      PokeByte asd, i, Asc(Mid(st, i + 1, 1))\r\n   Next i\r\n   PokeByte asd, Len(st), 0\r\n \r\n   CallDLL "winmm.dll", "mciSendStringA", asd\r\n \r\n   DeleteMEMBlock asd\r\nEndFunction\r\n \r\n \r\n \r\nFunction CloseCDTray()\r\n   St$ = "Set CDAudio Door Closed"\r\n   asd = MakeMEMBlock(Len(st) + 1)\r\n \r\n   For i = 0 To Len(st)\r\n     PokeByte asd, i, Asc(Mid(st, i + 1, 1))\r\n   Next i\r\n   PokeByte asd, Len(st), 0\r\n   \r\n   CallDLL "winmm.dll", "mciSendStringA", asd\r\n   DeleteMEMBlock asd\r\nEndFunction', 'asf', '1337', 6, '2010-09-06 20:46:18', 0, 6),
('dg', 'a = 10\r\n\r\nIf a &lt;= 10\r\n	Print "Hello World!"\r\nEndIf\r\n\r\nWaitKey', 'afas', '1337', 7, '2010-09-11 12:19:36', 0, 6),
('asf', 'a = 10\r\n\r\nIf a ', 'asf', '1337', 8, '2010-09-11 12:25:25', 0, 6),
('asd', '&lt;script type="text/javascript"&gt;alert("Moi");&lt;/script&gt;', 'asd', '1337', 9, '2010-09-11 12:41:56', 0, 6),
('fd', '//==================================================================\r\n// MD5-funktio [ Bagard ]\r\n// * Pohjana käytetty Craig Kiesaun Blitzille tehtyä MD5-funktiota:\r\n//   http://www.blitzbasic.com/codearcs/codearcs.php?code=278\r\n// -----------------------------\r\n// Luo merkkijonosta MD5-tarkistussumman (hashin). Hashattua\r\n// merkkijonoa ei voida palauttaa alkuperäiseksi. Funktio on\r\n// hyödyllinen esim. salasanojen tallentamisessa.\r\n// * Funktion ottaa parametrikseen hashattavan merkkijonon\r\n// * Funktio palauttaa valmiin MD5-hashin.\r\n// * Apufunktiot funktion omaan käyttöön:\r\n//   - MD5_F\r\n//   - MD5_G\r\n//   - MD5_H\r\n//   - MD5_I\r\n//   - MD5_FF\r\n//   - MD5_GG\r\n//   - MD5_HH\r\n//   - MD5_II\r\n//   - RotateLeft\r\n//   - WordToHex\r\n//   - BinAnd\r\n//   - BinNot\r\n//   - BinXor\r\n//   - BinOr\r\n//   - Bin2Dec\r\n//==================================================================\r\n \r\n// -----------------------------\r\n// ESIMERKKI\r\n// -----------------------------\r\n \r\nSCREEN 550, 150\r\n \r\nLocate 0, 15\r\nRepeat\r\n    Text 0, 0, "Kirjoita hashattava merkkijono ja paina rivinvaihtoa..."\r\n    merkkijono$ = Input("&gt;&gt; ")\r\n \r\n    DrawScreen\r\nUntil KeyHit( cbKeyReturn )\r\nCloseInput\r\n \r\nText 0, 0, "Merkkijono: " + merkkijono$\r\nText 0, 15, "MD5-hash: " + MD5( merkkijono$ )\r\n \r\nDrawScreen\r\nWaitKey\r\n \r\n// -----------------------------\r\n// FUNKTIO\r\n// -----------------------------\r\n \r\nFunction MD5(jono$)\r\n \r\n    nblk = ((Len(jono$) + 8) Shr 6) + 1\r\n \r\n    Dim MD5_x(nblk * 16 - 1)\r\n \r\n    For i = 0 To nblk * 16 - 1\r\n        MD5_x(i) = 0\r\n    Next i\r\n \r\n    For i = 0 To (Len(jono$) - 1)\r\n        MD5_x(i Shr 2) = BinOr(MD5_x(i Shr 2), (Asc(Mid(jono$, (i + 1), 1)) Shl ((i Mod 4) * 8)))\r\n    Next i\r\n \r\n    MD5_x(i Shr 2) = BinOr(MD5_x(i Shr 2), (128 Shl (((i) Mod 4) * 8)))\r\n    MD5_x(nblk * 16 - 2) = Len(jono$) * 8\r\n \r\n    MD5_a = 1732584193 //&amp;H67452301\r\n    MD5_b = -271733879 //&amp;HEFCDAB89\r\n    MD5_c = -1732584194 //&amp;H98BADCFE\r\n    MD5_d = 271733878 //&amp;H10325476\r\n \r\n    // Käydään sanat läpi\r\n    For k = 0 To (nblk * 16 - 1) Step 16\r\n        MD5_AA = MD5_a\r\n        MD5_BB = MD5_b\r\n        MD5_CC = MD5_c\r\n        MD5_DD = MD5_d\r\n \r\n        // Kierros 1\r\n        MD5_a = MD5_FF(MD5_a, MD5_b, MD5_c, MD5_d, MD5_x(k + 0), 7, -680876936) //&amp;HD76AA478\r\n        MD5_d = MD5_FF(MD5_d, MD5_a, MD5_b, MD5_c, MD5_x(k + 1), 12, -389564586) //&amp;HE8C7B756\r\n        MD5_c = MD5_FF(MD5_c, MD5_d, MD5_a, MD5_b, MD5_x(k + 2), 17, 606105819 )//&amp;H242070DB\r\n        MD5_b = MD5_FF(MD5_b, MD5_c, MD5_d, MD5_a, MD5_x(k + 3), 22, -1044525330) //&amp;HC1BDCEEE\r\n        MD5_a = MD5_FF(MD5_a, MD5_b, MD5_c, MD5_d, MD5_x(k + 4), 7, -176418897) //&amp;HF57C0FAF\r\n        MD5_d = MD5_FF(MD5_d, MD5_a, MD5_b, MD5_c, MD5_x(k + 5), 12, 1200080426 )//&amp;H4787C62A\r\n        MD5_c = MD5_FF(MD5_c, MD5_d, MD5_a, MD5_b, MD5_x(k + 6), 17, -1473231341) //&amp;HA8304613\r\n        MD5_b = MD5_FF(MD5_b, MD5_c, MD5_d, MD5_a, MD5_x(k + 7), 22, -45705983) //&amp;HFD469501\r\n        MD5_a = MD5_FF(MD5_a, MD5_b, MD5_c, MD5_d, MD5_x(k + 8), 7, 1770035416) //&amp;H698098D8\r\n        MD5_d = MD5_FF(MD5_d, MD5_a, MD5_b, MD5_c, MD5_x(k + 9), 12, -1958414417 )//&amp;H8B44F7AF\r\n        MD5_c = MD5_FF(MD5_c, MD5_d, MD5_a, MD5_b, MD5_x(k + 10), 17, -42063 )//&amp;HFFFF5BB1\r\n        MD5_b = MD5_FF(MD5_b, MD5_c, MD5_d, MD5_a, MD5_x(k + 11), 22, -1990404162) //&amp;H895CD7BE\r\n        MD5_a = MD5_FF(MD5_a, MD5_b, MD5_c, MD5_d, MD5_x(k + 12), 7, 1804603682) //&amp;H6B901122\r\n        MD5_d = MD5_FF(MD5_d, MD5_a, MD5_b, MD5_c, MD5_x(k + 13), 12, -40341101) //&amp;HFD987193\r\n        MD5_c = MD5_FF(MD5_c, MD5_d, MD5_a, MD5_b, MD5_x(k + 14), 17, -1502002290) //&amp;HA679438E\r\n        MD5_b = MD5_FF(MD5_b, MD5_c, MD5_d, MD5_a, MD5_x(k + 15), 22, 1236535329) //&amp;H49B40821\r\n \r\n        // Kierros 2\r\n        MD5_a = MD5_GG(MD5_a, MD5_b, MD5_c, MD5_d, MD5_x(k + 1), 5, -165796510) //&amp;HF61E2562\r\n        MD5_d = MD5_GG(MD5_d, MD5_a, MD5_b, MD5_c, MD5_x(k + 6), 9, -1069501632) //&amp;HC040B340\r\n        MD5_c = MD5_GG(MD5_c, MD5_d, MD5_a, MD5_b, MD5_x(k + 11), 14, 643717713) //&amp;H265E5A51\r\n        MD5_b = MD5_GG(MD5_b, MD5_c, MD5_d, MD5_a, MD5_x(k + 0), 20, -373897302) //&amp;HE9B6C7AA\r\n        MD5_a = MD5_GG(MD5_a, MD5_b, MD5_c, MD5_d, MD5_x(k + 5), 5, -701558691) //&amp;HD62F105D\r\n        MD5_d = MD5_GG(MD5_d, MD5_a, MD5_b, MD5_c, MD5_x(k + 10), 9, 38016083) //&amp;H2441453\r\n        MD5_c = MD5_GG(MD5_c, MD5_d, MD5_a, MD5_b, MD5_x(k + 15), 14, -660478335) //&amp;HD8A1E681\r\n        MD5_b = MD5_GG(MD5_b, MD5_c, MD5_d, MD5_a, MD5_x(k + 4), 20, -405537848) //&amp;HE7D3FBC8\r\n        MD5_a = MD5_GG(MD5_a, MD5_b, MD5_c, MD5_d, MD5_x(k + 9), 5, 568446438) //&amp;H21E1CDE6\r\n        MD5_d = MD5_GG(MD5_d, MD5_a, MD5_b, MD5_c, MD5_x(k + 14), 9, -1019803690) //&amp;HC33707D6\r\n        MD5_c = MD5_GG(MD5_c, MD5_d, MD5_a, MD5_b, MD5_x(k + 3), 14, -187363961) //&amp;HF4D50D87\r\n        MD5_b = MD5_GG(MD5_b, MD5_c, MD5_d, MD5_a, MD5_x(k + 8), 20, 1163531501) //&amp;H455A14ED\r\n        MD5_a = MD5_GG(MD5_a, MD5_b, MD5_c, MD5_d, MD5_x(k + 13), 5, -1444681467) //&amp;HA9E3E905\r\n        MD5_d = MD5_GG(MD5_d, MD5_a, MD5_b, MD5_c, MD5_x(k + 2), 9, -51403784) //&amp;HFCEFA3F8\r\n        MD5_c = MD5_GG(MD5_c, MD5_d, MD5_a, MD5_b, MD5_x(k + 7), 14, 1735328473) //&amp;H676F02D9\r\n        MD5_b = MD5_GG(MD5_b, MD5_c, MD5_d, MD5_a, MD5_x(k + 12), 20, -1926607734) //&amp;H8D2A4C8A\r\n \r\n        // Kierros 3\r\n        MD5_a =  MD5_HH(MD5_a, MD5_b, MD5_c, MD5_d, MD5_x(k + 5), 4, -378558) //&amp;HFFFA3942\r\n        MD5_d =  MD5_HH(MD5_d, MD5_a, MD5_b, MD5_c, MD5_x(k + 8), 11, -2022574463) //&amp;H8771F681\r\n        MD5_c = MD5_HH(MD5_c, MD5_d, MD5_a, MD5_b, MD5_x(k + 11), 16, 1839030562) //&amp;H6D9D6122\r\n        MD5_b = MD5_HH(MD5_b, MD5_c, MD5_d, MD5_a, MD5_x(k + 14), 23, -35309556) //&amp;HFDE5380C\r\n        MD5_a =  MD5_HH(MD5_a, MD5_b, MD5_c, MD5_d, MD5_x(k + 1), 4, -1530992060) //&amp;HA4BEEA44\r\n        MD5_d = MD5_HH(MD5_d, MD5_a, MD5_b, MD5_c, MD5_x(k + 4), 11, 1272893353) //&amp;H4BDECFA9\r\n        MD5_c = MD5_HH(MD5_c, MD5_d, MD5_a, MD5_b, MD5_x(k + 7), 16, -155497632) //&amp;HF6BB4B60\r\n        MD5_b = MD5_HH(MD5_b, MD5_c, MD5_d, MD5_a, MD5_x(k + 10), 23, -1094730640) //&amp;HBEBFBC70\r\n        MD5_a = MD5_HH(MD5_a, MD5_b, MD5_c, MD5_d, MD5_x(k + 13), 4, 681279174) //&amp;H289B7EC6\r\n        MD5_d = MD5_HH(MD5_d, MD5_a, MD5_b, MD5_c, MD5_x(k + 0), 11, -358537222) //&amp;HEAA127FA\r\n        MD5_c = MD5_HH(MD5_c, MD5_d, MD5_a, MD5_b, MD5_x(k + 3), 16, -722521979) //&amp;HD4EF3085\r\n        MD5_b = MD5_HH(MD5_b, MD5_c, MD5_d, MD5_a, MD5_x(k + 6), 23, 76029189) //&amp;H4881D05\r\n        MD5_a = MD5_HH(MD5_a, MD5_b, MD5_c, MD5_d, MD5_x(k + 9), 4, -640364487) //&amp;HD9D4D039\r\n        MD5_d = MD5_HH(MD5_d, MD5_a, MD5_b, MD5_c, MD5_x(k + 12), 11, -421815835) //&amp;HE6DB99E5\r\n        MD5_c = MD5_HH(MD5_c, MD5_d, MD5_a, MD5_b, MD5_x(k + 15), 16, 530742520) //&amp;H1FA27CF8\r\n        MD5_b = MD5_HH(MD5_b, MD5_c, MD5_d, MD5_a, MD5_x(k + 2), 23, -995338651) //&amp;HC4AC5665\r\n \r\n        // Kierros 4\r\n        MD5_a = MD5_II(MD5_a, MD5_b, MD5_c, MD5_d, MD5_x(k + 0), 6, -198630844) //&amp;HF4292244\r\n        MD5_d = MD5_II(MD5_d, MD5_a, MD5_b, MD5_c, MD5_x(k + 7), 10, 1126891415) //&amp;H432AFF97\r\n        MD5_c = MD5_II(MD5_c, MD5_d, MD5_a, MD5_b, MD5_x(k + 14), 15, -1416354905) //&amp;HAB9423A7\r\n        MD5_b = MD5_II(MD5_b, MD5_c, MD5_d, MD5_a, MD5_x(k + 5), 21, -57434055) //&amp;HFC93A039\r\n        MD5_a = MD5_II(MD5_a, MD5_b, MD5_c, MD5_d, MD5_x(k + 12), 6, 1700485571) //&amp;H655B59C3\r\n        MD5_d = MD5_II(MD5_d, MD5_a, MD5_b, MD5_c, MD5_x(k + 3), 10, -1894986606) //&amp;H8F0CCC92\r\n        MD5_c = MD5_II(MD5_c, MD5_d, MD5_a, MD5_b, MD5_x(k + 10), 15, -1051523) //&amp;HFFEFF47D\r\n        MD5_b = MD5_II(MD5_b, MD5_c, MD5_d, MD5_a, MD5_x(k + 1), 21, -2054922799) //&amp;H85845DD1\r\n        MD5_a = MD5_II(MD5_a, MD5_b, MD5_c, MD5_d, MD5_x(k + 8), 6, 1873313359) //&amp;H6FA87E4F\r\n        MD5_d = MD5_II(MD5_d, MD5_a, MD5_b, MD5_c, MD5_x(k + 15), 10, -30611744) //&amp;HFE2CE6E0\r\n        MD5_c = MD5_II(MD5_c, MD5_d, MD5_a, MD5_b, MD5_x(k + 6), 15, -1560198380 )//&amp;HA3014314\r\n        MD5_b = MD5_II(MD5_b, MD5_c, MD5_d, MD5_a, MD5_x(k + 13), 21, 1309151649) //&amp;H4E0811A1\r\n        MD5_a = MD5_II(MD5_a, MD5_b, MD5_c, MD5_d, MD5_x(k + 4), 6, -145523070) //&amp;HF7537E82\r\n        MD5_d = MD5_II(MD5_d, MD5_a, MD5_b, MD5_c, MD5_x(k + 11), 10, -1120210379) //&amp;HBD3AF235\r\n        MD5_c = MD5_II(MD5_c, MD5_d, MD5_a, MD5_b, MD5_x(k + 2), 15, 718787259) //&amp;H2AD7D2BB\r\n        MD5_b = MD5_II(MD5_b, MD5_c, MD5_d, MD5_a, MD5_x(k + 9), 21, -343485551) //&amp;HEB86D391\r\n \r\n        MD5_a = MD5_a + MD5_AA\r\n        MD5_b = MD5_b + MD5_BB\r\n        MD5_c = MD5_c + MD5_CC\r\n        MD5_d = MD5_d + MD5_DD\r\n    Next k\r\n \r\n    Return Lower(Str(WordToHex(MD5_a)) + Str(WordToHex(MD5_b)) + Str(WordToHex(MD5_c)) + Str(WordToHex(MD5_d)))\r\nEnd Function\r\n \r\n \r\nFunction MD5_F(x, y, z)\r\n    Return BinOr(BinAnd(x, y), BinAnd(BinNot(x), z))\r\nEnd Function\r\n \r\nFunction MD5_G(x, y, z)\r\n    Return BinOr(BinAnd(x, z), BinAnd(y, BinNot(z)))\r\nEnd Function\r\n \r\nFunction MD5_H(x, y, z)\r\n    Return BinXor(BinXor(x, y), z)\r\nEnd Function\r\n \r\nFunction MD5_I(x, y, z)\r\n    Return BinXor(y, BinOr(x, BinNot(z)))\r\nEnd Function\r\n \r\nFunction MD5_FF(a, b, c, d, x, s, ac)\r\n    a = (a + ((MD5_F(b, c, d)+ x)+ ac))\r\n    a = RotateLeft(a, s)\r\n    Return a + b\r\nEnd Function\r\n \r\nFunction MD5_GG(a, b, c, d, x, s, ac)\r\n    a = (a + ((MD5_G(b, c, d) + x) + ac))\r\n    a = RotateLeft(a, s)\r\n    Return a + b\r\nEnd Function\r\n \r\nFunction MD5_HH(a, b, c, d, x, s, ac)\r\n    a = (a + ((MD5_H(b, c, d) + x) + ac))\r\n    a = RotateLeft(a, s)\r\n    Return a + b\r\nEnd Function\r\n \r\nFunction MD5_II(a, b, c, d, x, s, ac)\r\n    a = (a + ((MD5_I(b, c, d) + x) + ac))\r\n    a = RotateLeft(a, s)\r\n    Return a + b\r\nEnd Function\r\n \r\nFunction RotateLeft(lValue, iShiftBits)\r\n    Return BinOr(lValue Shl iShiftBits, lValue Shr (32 - iShiftBits))\r\nEnd Function\r\n \r\nFunction WordToHex(lValue)\r\n    For lCount = 0 To 3\r\n        lByte = BinAnd(lValue Shr lCount * 8, 255)\r\n        ToHex$ = ToHex$ + Right("0" + Hex(lByte), 2)\r\n    Next lCount\r\n    Return ToHex$\r\nEnd Function\r\n \r\nFunction BinAnd(luku1, luku2)\r\n    For i = 0 To 31\r\n        luku3 = luku3 + (((luku1 Shr i) Mod 2) And ((luku2 Shr i) Mod 2)) Shl i\r\n    Next i\r\n    Return luku3\r\nEnd Function\r\n \r\nFunction BinNot(luku1)\r\n    For i = 0 To 31\r\n        luku3 = luku3 + (Not ((luku1 Shr i) Mod 2)) Shl i\r\n    Next i\r\n    Return luku3\r\nEnd Function\r\n \r\nFunction BinXor(luku1, luku2)\r\n    For i = 0 To 31\r\n        luku3 = luku3 + (((luku1 Shr i) Mod 2) Xor ((luku2 Shr i) Mod 2)) Shl i\r\n    Next i\r\n    Return luku3\r\nEnd Function\r\n \r\nFunction BinOr(luku1, luku2)\r\n    For i = 0 To 31\r\n        luku3 = luku3 + (((luku1 Shr i) Mod 2) Or ((luku2 Shr i) Mod 2)) Shl i\r\n    Next i\r\n    Return luku3\r\nEnd Function\r\n \r\nFunction Bin2Dec(jono$)\r\n    For i = Len(jono$) To 1 Step -1\r\n        arvo = Int(Mid(jono$, i, 1))\r\n        If arvo = 1 Then\r\n            luku = luku + 2 ^ (Len(jono$) - i)\r\n        EndIf\r\n    Next i\r\n    Return luku\r\nEnd Function ', 'dfsdfsd', '1337', 10, '2010-10-20 22:23:51', 0, 6),
('Testaus', 'a$ = "kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk"', 'aaaaaaaaaa', '1337', 11, '2010-10-30 23:41:17', 0, 6);

-- --------------------------------------------------------

--
-- Rakenne taululle `cbkk_comments`
--

CREATE TABLE IF NOT EXISTS `cbkk_comments` (
  `author` varchar(15) NOT NULL,
  `content` text NOT NULL,
  `date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `codeId` int(11) NOT NULL,
  `id` int(11) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=10 ;

--
-- Vedos taulusta `cbkk_comments`
--

INSERT INTO `cbkk_comments` (`author`, `content`, `date`, `codeId`, `id`) VALUES
('1337', 'Testi', '2010-09-04 17:03:06', 4, 1),
('1337', 'asmfosf', '2010-09-04 23:16:47', 4, 2),
('1337', 'asfgasg', '2010-09-04 23:20:49', 4, 3),
('1337', 'Turha', '2010-09-05 11:40:02', 2, 4),
('1337', 'Jeejee!', '2010-09-05 11:45:38', 4, 5),
('1337', 'Jeejsafhasf', '2010-09-05 13:13:04', 1, 6),
('testi', 'moi', '2010-09-05 13:15:30', 4, 7),
('1337', 'ääöäöäöäö', '2010-09-05 13:25:42', 4, 8),
('1337', '1', '2011-01-26 22:31:21', 4, 9);

-- --------------------------------------------------------

--
-- Rakenne taululle `cbkk_users`
--

CREATE TABLE IF NOT EXISTS `cbkk_users` (
  `nick` varchar(15) NOT NULL,
  `password` varchar(40) NOT NULL,
  `email` text NOT NULL,
  `active` tinyint(4) NOT NULL DEFAULT '0',
  `hash` varchar(40) NOT NULL,
  `id` int(11) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=7 ;

--
-- Vedos taulusta `cbkk_users`
--

INSERT INTO `cbkk_users` (`nick`, `password`, `email`, `active`, `hash`, `id`) VALUES
('asd', 'b1b3773a05c0ed0176787a4f1574ff0075f7521e', 'a@b.com', 0, 'be76c69fe407c14fb05d8d56d3c5327e2c456b25', 1),
('asd', '3da541559918a808c2402bba5012f6c60b27661c', 'a@b.com', 0, '74fe00c364520280c2e17d1787d3765b2e711fa8', 2),
('testi', 'b1b3773a05c0ed0176787a4f1574ff0075f7521e', 'a@b.com', 0, '4bf91c41cd3118622ba2d7bc06388b543fa1f73e', 3),
('1337', 'f10e2821bbbea527ea02200352313bc059445190', 'a@b.com', 1, 'acdc898b475d00bcecaf3f8e3d5512eb10cd3b54', 4),
('asdasd', 'f10e2821bbbea527ea02200352313bc059445190', 'a@b.com', 0, '76f07a8ed296d270ff71c0015e90791e75a9eacc', 5),
('moi', '55cbe7fd00627a28668d1d7c9899bdb602dad69d', 'a@b.com', 0, 'dffb57fc1727448fb86ab4dd86290a076001ff6d', 6);
